services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: generic
      POSTGRES_USER: rami
      POSTGRES_PASSWORD: rami
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: generic
    build:
      context: .
      dockerfile: Dockerfile-Distroless
    environment:
      SPRING_PROFILES_ACTIVE: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/generic
      SPRING_DATASOURCE_USERNAME: rami
      SPRING_DATASOURCE_PASSWORD: rami
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - app

  # Servicio Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    volumes:
      - ./src/main/resources/loki-config.yaml:/etc/loki/local-config.yml
    command: -config.file=/etc/loki/local-config.yml

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml

volumes:
  postgres_data: